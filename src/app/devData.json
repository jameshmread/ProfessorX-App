[
    {
        "runner": "mocha",
        "config": {
            "reporter": "dot"
        },
        "duration": {
            "d": 0,
            "h": 0,
            "m": 1,
            "s": 6,
            "ms": 428
        }
    },
    [ 
      {
                  "SRC_FILE_PATH": "./testProject/src/",
                  "SRC_FILE": "HelloWorld.ts",
                  "mutationAttemptFailure": {
                        "attemptedMutation": "37 => -",
                        "nodeToBeMutated": {
                              "syntaxType": 37,
                              "positions": {
                                    "pos": 91,
                                    "end": 93
                              },
                              "parentFileName": "HelloWorld.ts"
                        }
                  },
                  "lineNumber": 2,
                  "origionalCode": ["return a + b;"],
                  "mutatedCode": ["return a + b;"]
            },
            {
                  "SRC_FILE_PATH": "./testProject/src/",
                  "SRC_FILE": "FileTwo.ts",
                  "mutationAttemptFailure": {
                        "attemptedMutation": "29 => -",
                        "nodeToBeMutated": {
                              "syntaxType": 29,
                              "positions": {
                                    "pos": 193,
                                    "end": 195
                              },
                              "parentFileName": "FileTwo.ts"
                        }
                  },
                  "lineNumber": 4,
                  "origionalCode": ["if (i % 2 === 0 && 1 > 0){"],
                  "mutatedCode": ["if (i % 2 === 0 && 1 > 0){"]
            },
            {
                  "SRC_FILE_PATH": "./testProject/src/",
                  "SRC_FILE": "HelloWorld.ts",
                  "testFilePath": "./testProject/src/HelloWorld.ts1C1396.spec.m.ts",
                  "lineNumber": 2,
                  "origionalCode": ["return a + b;"],
                  "mutatedCode": ["return a / b;"],
                  "numberOfPassedTests": 3,
                  "numberOfFailedTests": 1,
                  "mutantKilled": true
            },
            {
                  "SRC_FILE_PATH": "./testProject/src/",
                  "SRC_FILE": "HelloWorld.ts",
                  "testFilePath": "./testProject/src/HelloWorld.ts1C1396.spec.m.ts",
                  "lineNumber": 8,
                  "origionalCode": ["return a + b;"],
                  "mutatedCode": ["return a / b;"],
                  "numberOfPassedTests": 4,
                  "numberOfFailedTests": 0,
                  "mutantKilled": false
            },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C3744.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 >= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts12C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 * 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C3744.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C3744.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C3744.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 >= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts12C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 * 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts20C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C3744.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 >= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts12C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 * 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts20C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C3744.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 >= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts12C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 * 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts20C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C3744.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 >= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts12C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 * 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts20C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C3744.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 >= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts12C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 * 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts20C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C3744.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 >= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts12C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 * 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts20C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a - b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {}",
                "",
                "public truth () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C13192.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i < 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i - 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i / 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === -1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts24C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {",
                "return false;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts3C13192.spec.m.ts",
            "lineNumber": 14
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts7C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts11C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i !== 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i * 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts19C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a * b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts6C13192.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i >= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts14C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i > 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts22C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a / b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C13192.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 0;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i <= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i + 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "} return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C13192.spec.m.ts",
            "lineNumber": 7
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a - b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {}",
                "",
                "public truth () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C13192.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i < 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i - 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i / 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === -1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts24C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {",
                "return false;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts3C13192.spec.m.ts",
            "lineNumber": 14
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts7C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts11C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i !== 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i * 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts19C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a * b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts6C13192.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i >= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts14C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i > 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts22C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a / b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C13192.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 0;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i <= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i + 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "} return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C13192.spec.m.ts",
            "lineNumber": 7
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a - b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {}",
                "",
                "public truth () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C13192.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i < 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i - 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i / 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === -1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts24C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {}",
                "",
                "public add3Numbers (a: number, b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C8552.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit - 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts7C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts11C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h * w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C8552.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h / w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C8552.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit * 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts9C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 0; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h - w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {}",
                "",
                "public helloStringLiteral () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C8552.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit / 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts8C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + -1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > -1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {}",
                "",
                "public add3Numbers (a: number, b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C8552.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit - 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts7C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts11C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h * w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C8552.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h / w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C8552.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit * 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts9C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 0; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h - w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {}",
                "",
                "public helloStringLiteral () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C8552.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit / 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts8C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + -1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > -1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {}",
                "",
                "public add3Numbers (a: number, b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C8552.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit - 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts7C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts11C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b * c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) >= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) > 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return b / c * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts14C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = -1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts18C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b - c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) < 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) - 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts12C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && -1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b * c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) >= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) > 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return b / c * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts14C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = -1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts18C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b - c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) < 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) - 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts12C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && -1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b * c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) >= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) > 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return b / c * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts14C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = -1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts18C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b - c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) < 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) - 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts12C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && -1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b * c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) >= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) > 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return b / c * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts14C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = -1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts18C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b - c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) < 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) - 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts12C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && -1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b * c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) >= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) > 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return b / c * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts14C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = -1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts18C6696.spec.m.ts",
            "lineNumber": 3
        }
    ],
    [
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) { return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C3744.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 !== 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts13C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 / 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts17C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 0 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) { return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C3744.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 !== 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts13C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 / 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts17C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 0 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) { return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C3744.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 !== 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts13C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 / 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts17C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 0 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) { return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C3744.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 !== 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts13C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 / 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts17C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 0 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) { return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C3744.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 !== 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts13C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 / 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts17C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 0 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) { return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C3744.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 !== 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts13C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 / 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts17C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 0 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) { return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C3744.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 !== 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts13C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 / 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts17C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 0 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) { return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C3744.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 !== 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts13C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 / 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts17C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 0 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a / b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) { return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C3744.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 !== 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts13C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 / 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts17C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 0 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a / b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C13192.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 0;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i <= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i + 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "} return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C13192.spec.m.ts",
            "lineNumber": 7
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a - b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {}",
                "",
                "public truth () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C13192.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i < 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i - 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i / 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === -1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts24C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {",
                "return false;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts3C13192.spec.m.ts",
            "lineNumber": 14
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts7C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts11C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i !== 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i * 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts19C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a * b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts6C13192.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i >= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts14C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i > 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts22C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a / b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C13192.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 0;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i <= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i + 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "} return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C13192.spec.m.ts",
            "lineNumber": 7
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a - b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {}",
                "",
                "public truth () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C13192.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i < 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i - 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i / 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === -1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts24C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {",
                "return false;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts3C13192.spec.m.ts",
            "lineNumber": 14
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts7C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts11C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i !== 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i * 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts19C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a * b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts6C13192.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i >= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts14C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i > 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts22C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a / b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C13192.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 0;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i <= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i + 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "} return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C13192.spec.m.ts",
            "lineNumber": 7
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h - w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {}",
                "",
                "public helloStringLiteral () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C8552.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit / 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts8C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + -1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > -1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {}",
                "",
                "public add3Numbers (a: number, b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C8552.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit - 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts7C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts11C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h * w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C8552.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h / w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C8552.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit * 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts9C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 0; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h - w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {}",
                "",
                "public helloStringLiteral () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C8552.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit / 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts8C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + -1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > -1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {}",
                "",
                "public add3Numbers (a: number, b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C8552.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit - 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts7C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts11C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h * w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C8552.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h / w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C8552.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit * 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts9C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 0; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h - w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {}",
                "",
                "public helloStringLiteral () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C8552.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit / 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts8C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + -1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > -1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) /  100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) !== 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {}",
                "",
                "public helloStrings (h: string, w: string) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts11C6696.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b / c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) <= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) + 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts13C6696.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 0 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) /  100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) !== 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {}",
                "",
                "public helloStrings (h: string, w: string) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts11C6696.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b / c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) <= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) + 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts13C6696.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 0 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) /  100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) !== 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {}",
                "",
                "public helloStrings (h: string, w: string) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts11C6696.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b / c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) <= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) + 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts13C6696.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 0 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) /  100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) !== 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {}",
                "",
                "public helloStrings (h: string, w: string) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts11C6696.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b / c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) <= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) + 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts13C6696.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 0 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) /  100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) !== 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {}",
                "",
                "public helloStrings (h: string, w: string) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts11C6696.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C6696.spec.m.ts",
            "lineNumber": 4
        }
    ],
    [
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {}",
                "",
                "public takeAway (a: number, b: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C3744.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 < 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 - 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0) {}",
                "}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts22C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {}",
                "",
                "public takeAway (a: number, b: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C3744.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 < 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 - 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0) {}",
                "}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts22C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {}",
                "",
                "public takeAway (a: number, b: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C3744.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 < 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 - 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0) {}",
                "}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts22C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {}",
                "",
                "public takeAway (a: number, b: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C3744.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 < 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 - 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0) {}",
                "}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts22C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {}",
                "",
                "public takeAway (a: number, b: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C3744.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 < 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 - 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0) {}",
                "}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts22C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {}",
                "",
                "public takeAway (a: number, b: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C3744.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 < 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 - 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0) {}",
                "}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts22C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {}",
                "",
                "public takeAway (a: number, b: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C3744.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 < 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 - 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0) {}",
                "}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts22C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {}",
                "",
                "public takeAway (a: number, b: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C3744.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 < 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 - 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0) {}",
                "}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts22C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {",
                "return a * b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C3744.spec.m.ts",
            "lineNumber": 2
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {}",
                "",
                "public takeAway (a: number, b: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C3744.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 < 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 - 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0) {}",
                "}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts22C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a * b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts6C13192.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i >= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts14C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i > 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts22C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a / b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C13192.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 0;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i <= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i + 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "} return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C13192.spec.m.ts",
            "lineNumber": 7
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a - b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {}",
                "",
                "public truth () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C13192.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i < 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i - 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i / 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === -1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts24C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {",
                "return false;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts3C13192.spec.m.ts",
            "lineNumber": 14
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts7C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts11C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i !== 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i * 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts19C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a * b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts6C13192.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i >= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts14C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i > 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts22C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a / b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C13192.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 0;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i <= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i + 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "} return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C13192.spec.m.ts",
            "lineNumber": 7
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a - b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {}",
                "",
                "public truth () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C13192.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i < 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i - 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i / 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === -1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts24C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {",
                "return false;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts3C13192.spec.m.ts",
            "lineNumber": 14
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts7C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts11C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i !== 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i * 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts19C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a * b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts6C13192.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i >= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts14C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i > 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts22C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h / w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C8552.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit * 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts9C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 0; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h - w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {}",
                "",
                "public helloStringLiteral () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C8552.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit / 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts8C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + -1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > -1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {}",
                "",
                "public add3Numbers (a: number, b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C8552.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit - 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts7C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts11C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h * w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C8552.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h / w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C8552.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit * 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts9C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 0; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h - w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {}",
                "",
                "public helloStringLiteral () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C8552.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit / 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts8C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + -1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > -1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {}",
                "",
                "public add3Numbers (a: number, b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C8552.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit - 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts7C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts11C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h * w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C8552.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h / w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C8552.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit * 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts9C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 0; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b - c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) < 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) - 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts12C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && -1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b * c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) >= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) > 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return b / c * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts14C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = -1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts18C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b - c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) < 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) - 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts12C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && -1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b * c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) >= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) > 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return b / c * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts14C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = -1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts18C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b - c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) < 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) - 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts12C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && -1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b * c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) >= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) > 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return b / c * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts14C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = -1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts18C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b - c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) < 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) - 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts12C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && -1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b * c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) >= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) > 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return b / c * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts14C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = -1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts18C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b - c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) < 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) - 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts12C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && -1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C6696.spec.m.ts",
            "lineNumber": 4
        }
    ],
    [
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () {}",
                "",
                "public percentage (b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C3744.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 <= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts11C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 + 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts15C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () {}",
                "",
                "public percentage (b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C3744.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 <= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts11C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 + 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts15C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () {}",
                "",
                "public percentage (b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C3744.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 <= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts11C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 + 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts15C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () {}",
                "",
                "public percentage (b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C3744.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 <= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts11C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 + 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts15C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () {}",
                "",
                "public percentage (b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C3744.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 <= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts11C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 + 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts15C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () {}",
                "",
                "public percentage (b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C3744.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 <= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts11C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 + 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts15C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () {}",
                "",
                "public percentage (b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C3744.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 <= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts11C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 + 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts15C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () {}",
                "",
                "public percentage (b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C3744.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 <= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts11C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 + 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts15C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C3744.spec.m.ts",
            "lineNumber": 10
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () {}",
                "",
                "public percentage (b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C3744.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 <= 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts11C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 + 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts15C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % -1 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C3744.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {",
                "return false;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts3C13192.spec.m.ts",
            "lineNumber": 14
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts7C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts11C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i !== 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i * 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts19C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a * b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts6C13192.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i >= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts14C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i > 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts22C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a / b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C13192.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 0;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i <= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i + 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "} return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C13192.spec.m.ts",
            "lineNumber": 7
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a - b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {}",
                "",
                "public truth () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C13192.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i < 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i - 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i / 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === -1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts24C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {",
                "return false;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts3C13192.spec.m.ts",
            "lineNumber": 14
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts7C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts11C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i !== 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i * 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts19C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a * b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts6C13192.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts10C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i >= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts14C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i > 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts18C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts22C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a / b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C13192.spec.m.ts",
            "lineNumber": 25
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 0;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i <= 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i + 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "} return null",
                "}",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C13192.spec.m.ts",
            "lineNumber": 7
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a - b + c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C13192.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public takeAway (a: number, b: number) {",
                "return a - b;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public takeAway (a: number, b: number) {}",
                "",
                "public truth () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C13192.spec.m.ts",
            "lineNumber": 9
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts8C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i < 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i - 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts16C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i / 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts20C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === -1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts24C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {",
                "return false;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts3C13192.spec.m.ts",
            "lineNumber": 14
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts7C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * -1;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts11C13192.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i !== 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i * 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts19C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 1 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts23C13192.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h * w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C8552.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h / w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C8552.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit * 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts9C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 0; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h - w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {}",
                "",
                "public helloStringLiteral () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C8552.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit / 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts8C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + -1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > -1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {}",
                "",
                "public add3Numbers (a: number, b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C8552.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit - 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts7C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts11C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h * w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C8552.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h / w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C8552.spec.m.ts",
            "lineNumber": 5
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit * 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts9C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 0; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts13C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h - w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts0C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {}",
                "",
                "public helloStringLiteral () {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts4C8552.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit / 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts8C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + -1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts12C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > -1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts16C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "public addNumbers (a: number, b: number) {",
                "return a + b;",
                "}"
            ],
            "mutatedCode": [
                "public addNumbers (a: number, b: number) {}",
                "",
                "public add3Numbers (a: number, b: number, c: number) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C8552.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit - 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts7C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts11C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 1){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h * w;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts2C8552.spec.m.ts",
            "lineNumber": 18
        },
        {
            "origionalCode": [
                "",
                "public helloStringLiteral () {",
                "return \"hello: \" + \"1\";",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStringLiteral () { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts6C8552.spec.m.ts",
            "lineNumber": 21
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {}",
                "return numbers;",
                "}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts10C8552.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts14C8552.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b / c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) <= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) + 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts13C6696.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 0 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) /  100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) !== 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {}",
                "",
                "public helloStrings (h: string, w: string) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts11C6696.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b / c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) <= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) + 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts13C6696.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 0 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) /  100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) !== 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {}",
                "",
                "public helloStrings (h: string, w: string) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts11C6696.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b / c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) <= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) + 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts13C6696.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 0 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) /  100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) !== 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {}",
                "",
                "public helloStrings (h: string, w: string) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts11C6696.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b / c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) <= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) + 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts13C6696.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 0 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) /  100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts3C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) !== 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts7C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public truth () {",
                "return true;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public truth () {}",
                "",
                "public helloStrings (h: string, w: string) {"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 7,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/HelloWorld.ts11C6696.spec.m.ts",
            "lineNumber": 13
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {}",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts15C6696.spec.m.ts",
            "lineNumber": 1
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 1,
            "numberOfFailedTests": 0,
            "mutantKilled": false,
            "testFilePath": "./testProject/src/FileTwo.ts19C6696.spec.m.ts",
            "lineNumber": 4
        },
        {
            "origionalCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b + c;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public add3Numbers (a: number, b: number, c: number) {",
                "return a + b / c;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts1C6696.spec.m.ts",
            "lineNumber": 6
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) <= 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts5C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) * 100;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public percentage (b: number, c: number) {",
                "return (b / c) + 100;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts9C6696.spec.m.ts",
            "lineNumber": 26
        },
        {
            "origionalCode": [
                "",
                "public helloStrings (h: string, w: string) {",
                "return h + w;",
                "}"
            ],
            "mutatedCode": [
                "",
                "public helloStrings (h: string, w: string) { return null",
                "}",
                ""
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "HelloWorld.ts",
            "numberOfPassedTests": 6,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/HelloWorld.ts13C6696.spec.m.ts",
            "lineNumber": 17
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 1; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts17C6696.spec.m.ts",
            "lineNumber": 3
        },
        {
            "origionalCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 1 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "mutatedCode": [
                "public getEvenNumbers (limit: number): Array <number> {",
                "const numbers = [];",
                "for (let i = 0; i < limit + 1; i++) {",
                "if (i % 2 === 0 && 0 > 0){",
                "numbers.push(i);",
                "}",
                "}",
                "return numbers;",
                "}"
            ],
            "SRC_FILE_PATH": "./testProject/src/",
            "SRC_FILE": "FileTwo.ts",
            "numberOfPassedTests": 0,
            "numberOfFailedTests": 1,
            "mutantKilled": true,
            "testFilePath": "./testProject/src/FileTwo.ts21C6696.spec.m.ts",
            "lineNumber": 4
        }
    ]
]